# === Allgmeine Ignorierungen (überall im Repo) ===
# Generierte Log- und Temp-Dateien
*.log
*.tmp
*.bak
*.old
*.swp
*.user
*.suo
.DS_Store

# Git-spezifische Konfigurationen für IDEs
.idea/
.vscode/
.vs/

# === FRONTEND (DPA) ===
# Node.js Abhängigkeiten
/DPA/node_modules/
# Build-Output (wird bei npm run build generiert)
/DPA/dist/
/DPA/build/
# Lokale Umgebungsvariablen-Datei
/DPA/.env

# === C# BACKEND (WILMA_Backend) ===
# Kompilierte Binärdateien und Objektdateien
/WILMA_Backend/bin/
/WILMA_Backend/obj/
# Dynamisch generierte C# SQLite Datenbank-Dateien
/WILMA_Backend/*.db
/WILMA_Backend/*.db-shm
/WILMA_Backend/*.db-wal
# Upload-Ordner für Profilbilder (dynamische User-Uploads)
/WILMA_Backend/wwwroot/profile-images/

# === PYTHON KI-BACKEND (WaterflowForecast) ===
# Virtuelle Python-Umgebung (sehr groß!)
/WILMA_Fullstack/WaterflowForecast/venv/
# Python-Bytecode-Cache
/WILMA_Fullstack/WaterflowForecast/__pycache__/
# Kompilierte Python-Dateien (plattformspezifisch)
/WILMA_Fullstack/WaterflowForecast/*.pyc
/WILMA_Fullstack/WaterflowForecast/*.pyo
/WILMA_Fullstack/WaterflowForecast/*.pyd
# Temporäre Dateien aus Python-Skripten
/WILMA_Fullstack/WaterflowForecast/temp_*
# Generierte Ergebnis-Ordner (Plots, Metriken, temporäre CSVs)
/WILMA_Fullstack/WaterflowForecast/results/
# Ordner für User-Uploads im KI-Backend (falls vorhanden und nicht identisch mit C# uploads)
/WILMA_Fullstack/WaterflowForecast/uploads/


# === DATEN & ASSETS, DIE IM REPO SEIN MÜSSEN (NICHT IGNORIERT) ===
# Die folgenden Dateitypen/Ordner werden NICHT ignoriert, wenn sie nicht in den oben genannten
# ignorierten Pfaden liegen.
# - appsettings.json (C# Konfiguration)
# - forecast.db (Initial befüllte KI-Datenbank)
# - *.csv (Initiale Daten-CSVs in 'data/synthetic/' etc.)
# - *.png, *.jpg, *.svg etc. (Statische Bild-Assets wie Logo, Flaggen)
#   Stelle sicher, dass diese Dateien sich NICMAHT in ignorierten Ordnern wie `results/` oder `uploads/` befinden.
